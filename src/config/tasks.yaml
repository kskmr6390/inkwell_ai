plan_task:
  description: >
    Analyze the blog topic and create a comprehensive content outline optimized for clarity, SEO, and reader engagement.
    Identify the main sections and subtopics, recommend headings (H2/H3), relevant data points or trends, and table ideas
    (e.g., '[TABLE: LLM size vs inference cost]').
    Suggest tone (e.g., educational, conversational, thought‑leader) and include references or expert sources if applicable.
  expected_output: >
    A structured outline including:
    - Section titles (H2/H3)
    - Brief content notes per section
    - Tone/style notes and any suggested references
  agent: planner

write_task:
  description: >
    Using the planner’s outline, write a complete, insightful, and SEO‑optimized blog post.
    The content should be factual, well‑cited, clearly structured, and include placeholders for tables only
    (e.g., [TABLE: …]).
    Use markdown formatting with H2/H3 headings, bullet lists, quotes, and tables.
  expected_output: >
    A full markdown‑formatted blog post with:
    - Engaging introduction
    - Clear, structured sections ('##' and '###' headings)
    - Data, examples, expert references
    - Summary or CTA in the conclusion
  agent: writer
  expected_output_file: blog_post.md

edit_task:
  description: >
    Refine the draft blog post for clarity, grammar, narrative flow, and structural coherence.
    Ensure consistency in tone and formatting, finalize the markdown, and embed proper table syntax.
    Validate data integrity and enhance scannability with headings, lists, quotes, and tables. Optimize for SEO and readability.
  expected_output: >
    A final publication‑ready blog post that:
    - Uses clean markdown syntax
    - Embeds tables in the correct places (no images or charts)
    - Maintains consistent tone and structure
    - Includes finalized H1–H3 hierarchy, metadata‑ready intro and outro
  agent: editor
  expected_output_file: blog_post.md

post_to_dev_task:
  description: >
    Publish the final markdown blog post to Dev.to via the Dev.to API.
    Ensure that:
    - All markdown formatting renders correctly (including code blocks, lists, and tables)
    - Relevant tags are included (#ai, #machinelearning, #opensource, etc.)
    - A meta description and optional canonical URL are applied
    - The post is validated for rendering issues and a success confirmation with URL is returned
  expected_output: >
    A confirmation markdown file containing:
    - The Dev.to post URL
    - A publication status message
    - Any metadata used (title, tags, canonical URL)
  agent: dev_poster
  expected_output_file: dev_to_post_result.md

